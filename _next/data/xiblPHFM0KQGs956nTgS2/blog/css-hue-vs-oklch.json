{"pageProps":{"frontmatter":{"title":"CSSの色関数について調べたこと","description":"色関数について調べたことと感想","date":"2024-06-20","tag":["CSS","デザイン"]},"slug":"css-hue-vs-oklch","innerHtml":"<h2 id=\"%E8%89%B2%E9%96%A2%E6%95%B0%E3%81%A8%E3%81%AF\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E8%89%B2%E9%96%A2%E6%95%B0%E3%81%A8%E3%81%AF\" aria-hidden=\"true\">#</a> 色関数とは</h2>\n<p>rgb(255,255,255)はもろに色関数。色関数にも種類があり、rgbのRGBAやHSLはCSS Color Module 3(2011年)のもの。次世代のCSS Color Module 4ではHWBやOklchなどがある。</p>\n<h2 id=\"hsl%E3%81%A8oklch%E3%81%AE%E6%AF%94%E8%BC%83\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#hsl%E3%81%A8oklch%E3%81%AE%E6%AF%94%E8%BC%83\" aria-hidden=\"true\">#</a> HSLとOKLCHの比較</h2>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>HSL</th>\n<th>OKLCH</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>CSSでの指定</strong></td>\n<td>hsl(H S L[ / A])</td>\n<td>oklch(L C H[ / A])</td>\n</tr>\n<tr>\n<td><strong>色相 (H)</strong></td>\n<td>0から360度の範囲</td>\n<td>0から360度の範囲</td>\n</tr>\n<tr>\n<td><strong>彩度 (S/C)</strong></td>\n<td>0%から100% (パーセンテージ)</td>\n<td>数値で表され、最大値は色空間に依存</td>\n</tr>\n<tr>\n<td><strong>明度 (L)</strong></td>\n<td>0%から100% (パーセンテージ)</td>\n<td>0から100の範囲の数値</td>\n</tr>\n<tr>\n<td><strong>色の表現</strong></td>\n<td>直感的で使いやすい</td>\n<td>色の知覚的均一性に優れる</td>\n</tr>\n<tr>\n<td><strong>用途</strong></td>\n<td>一般的なWebデザインやアプリケーション</td>\n<td>専門的なデザインや色の一貫性が重要な用途</td>\n</tr>\n<tr>\n<td><strong>色の調整</strong></td>\n<td>色相を変えるだけで簡単に色のバリエーションを生成</td>\n<td>明度や彩度を変えても色相が保持されるため、異なる明度での色の調和が容易</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"%E8%AA%AC%E6%98%8E%3A\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E8%AA%AC%E6%98%8E%3A\" aria-hidden=\"true\">#</a> 説明:</h3>\n<ul>\n<li><strong>色相 (Hue)</strong>: 両モデルともに色相は度数で表され、色の種類（赤、緑、青など）を定義します。</li>\n<li><strong>彩度 (Saturation/Chroma)</strong>: HSLではパーセンテージで彩度を表し、色の鮮やかさを示す。OKLCHでは彩度が数値で表され、色の純度を示すため、より精密な色調整が可能</li>\n<li><strong>明度 (Lightness)</strong>: HSLでは明度もパーセンテージで表され、0%が黒、100%が白。OKLCHでは明度が数値で表され、より広範な色調整が可能</li>\n<li><strong>色の表現と用途</strong>: HSLは直感的で、誰でも簡単に色を選ぶことができるが、OKLCHは色の均一性を重視しており、専門的な用途に使われるらしい。</li>\n</ul>\n<p>どちらにも基準の色から色を足し引き等で指定できる。<br>\nhsl(from rgb(200 0 0) calc(h + 30) s calc(l + 30))<br>\noklch(from hsl(180 100% 50%) calc(l - 0.1) c h)</p>\n<h2 id=\"%E6%84%9F%E6%83%B3\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E6%84%9F%E6%83%B3\" aria-hidden=\"true\">#</a> 感想</h2>\n<p>使うのは実際骨が折れそう。特にデザイナーは慣れない色指定方法になるだろうし。<br>\nエンジニア視点だと基準を決めればそれに応じた色を出せるようになるというのは夢があるが。</p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" aria-hidden=\"true\">#</a> 参考文献</h3>\n<ul>\n<li><a href=\"https://x.com/jh3yy/status/1770948509933445269\">Xユーザーのjhey ▲🐻🎈さん: 「Use CSS relative color syntax to darken/lighten colors for borders, backgrounds, etc. 🔥</a></li>\n<li><a href=\"https://codepen.io/jh3y/pen/rNbmBrE\">Theming with CSS color functions 🤙</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch\">oklch() - CSS: Cascading Style Sheets | MDN</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\">hsl() - CSS: Cascading Style Sheets | MDN</a></li>\n<li><a href=\"https://qiita.com/pon_u/items/0c216ee81f3b7aa04f98\">CSS の 色関数 について #CSS3 - Qiita</a></li>\n</ul>\n"},"__N_SSG":true}