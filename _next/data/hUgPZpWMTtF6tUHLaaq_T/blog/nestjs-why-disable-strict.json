{"pageProps":{"frontmatter":{"title":"Nest.jsってなんでstrictNullChecksがデフォルトでfalseなの？","description":"Nest.jsが採用された炎上案件に放り込まれた時の疑問の備忘録","date":"2023-08-07","tag":["Nest.js","JavaScript"]},"slug":"nestjs-why-disable-strict","innerHtml":"<h3 id=\"tl%3Bdr\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#tl%3Bdr\" aria-hidden=\"true\">#</a> TL;DR</h3>\n<p>Nest.jsのインストールを公式ドキュメントに何も考えずに沿っていくと、TypeScriptユーザーが怒りそうな設定が放り込まれたtsconfigができあがってる。</p>\n<h3 id=\"%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81\" aria-hidden=\"true\">#</a> 疑問に遭遇した状況</h3>\n<p>APIサーバーにNest.jsを採用したプロジェクトに途中参加した時、「型からnullが落ちるなー」と思っていた。<br>\n私はNest.jsも初めてで、TypeORMなど他にも初めてのフレームワークだらけだったので、ここら辺の設計思想かな？と逡巡したが、普通にtsconfigでstrictNullChecksがfalseになっていて愕然とした。</p>\n<h3 id=\"%E3%81%AA%E3%82%93%E3%81%A7strictnullchecks%E3%81%8Cfalse%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%EF%BC%9F\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E3%81%AA%E3%82%93%E3%81%A7strictnullchecks%E3%81%8Cfalse%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%EF%BC%9F\" aria-hidden=\"true\">#</a> なんでstrictNullChecksがfalseになるの？</h3>\n<p><a href=\"https://docs.nestjs.com/\">公式のGetting Started</a>をただなぞっていくと、以下のような<code>tsconfig.json</code>ができる...</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strictBindCallApply\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noFallthroughCasesInSwitch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>この件に不服を唱えたユーザーがいたが、Nest.js開発メンバー(@kamilmysliwiec)は以下のように返答を寄せている。(DeepL翻訳)</p>\n<blockquote>\n<p>物事を可能な限り型安全にすることが一般的に望ましいということには同意しますが、strictNullCheck/noImplictAnyをtrueに設定すると学習曲線が険しくなることを念頭に置かなければなりません。適切なバランスを追求するのは常に難しい(中略)\n幸い、これは差し迫った問題ではないように思える。誰かがこのオプションを使いたいのであれば、オンにすればいい。今のところ、このオプションをデフォルトにする予定はないが、時間の経過とともに変更されるかもしれない。\n<cite>出典: <a href=\"https://github.com/nestjs/nest-cli/issues/2057#issuecomment-1549083356\">Please turn on <code>strictNullChecks</code> option to be <code>true</code> · Issue #2057 · nestjs/nest-cli</a></cite></p>\n</blockquote>\n<p><code>--strict</code>オプションを使うと次のようにTSユーザーが慣れ親しんでるような設定になる。</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strictBindCallApply\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noFallthroughCasesInSwitch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><code>--strict</code>オプションを使ったり、開発初期にしっかりとtsconfigを見直そう。私と同じ状況になった人はブチギレながらtsconfigを設定し直した後に修正を入れまくろう。</p>\n<h3 id=\"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" aria-hidden=\"true\">#</a> 参考文献</h3>\n<ul>\n<li><a href=\"https://github.com/nestjs/nest-cli/issues/2057#issuecomment-1549083356\">Please turn on <code>strictNullChecks</code> option to be <code>true</code> · Issue #2057 · nestjs/nest-cli</a></li>\n<li><a href=\"https://docs.nestjs.com/\">Documentation | NestJS - A progressive Node.js framework</a></li>\n</ul>\n","anchors":[{"text":"tl%3Bdr","link":"tl%3Bdr"},{"text":"疑問に遭遇した状況","link":"%E7%96%91%E5%95%8F%E3%81%AB%E9%81%AD%E9%81%87%E3%81%97%E3%81%9F%E7%8A%B6%E6%B3%81"},{"text":"なんでstrictnullchecksがfalseになるの？","link":"%E3%81%AA%E3%82%93%E3%81%A7strictnullchecks%E3%81%8Cfalse%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%EF%BC%9F"},{"text":"参考文献","link":"%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE"}]},"__N_SSG":true}