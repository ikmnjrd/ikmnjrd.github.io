{"pageProps":{"tag":"vim","posts":[{"slug":"prictical-vim-memo","frontmatter":{"title":"実践Vimを読んだ時のメモ","description":"ただのメモ","date":"2022-08-25","tag":["vim"]},"content":"本を読んだ時のメモ書きがいつもより出てしまったので。\n\n### これは実践vimを読んだ時のメモです\n\nexpressionレジスタ  \n`<C-r>=` でアクセス  \n1+1の実行結果(2)などが得られる。  \n\n`vit`  \n`<script>DDG.Utils.WebVitals.reportWebVitals(DDG.pixel)</script>`  \n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nbody>.container {\n    background: none;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n    max-width: 1264px;\n    width: 100%;\n}\n\n.container {\n    flex: 1 0 auto;\n    margin: 0 auto;\n    position: relative;\n    text-align: left;\n    width: 100%;\n}\n\n| Left align | Right align | Center align | hoge |\n|:--------|:--------|:--------|:-------|\n| This    | This    | This    | hoge   |\n| column  | column  | column  | hoge   |\n| will    | will    | will    | hoge   |\n| be      | be      | be      | hoge   |\n| left    | right   | center  | hoge   |\n| aligned | aligned | aligned | hoge   |\n\n`q:` コマンドラインウィンドウ\nテキストのように編集ができる。`J`を使って2つのコマンドを1つにまとめるなどができる。  \nプロンプトから切り替えたい時は`<C-f>`で切り替えられる。  \n\n`%`は現在編集中のファイル名のエイリアス  \nバッファ内だと対となる対象へのジャンプ(モーション)  \nプロンプトの`:%s`はsubstituteコマンドじゃなかった？？  \n\n`:sh[ell]`コマンドが何故か使えず、`:terminal`コマンドなら使えた。  \n\n`<C-z>`実行中のvimをバックグラウンドにする。zshではfgコマンドでvimに戻ってこれる。  \n\n`read !{cmd}`コマンド実行結果をvim内に挿入できる  \n\n`q{register}`マクロ記録開始 => `q` マクロ記録停止  \n`@{register}` マクロ実行  \n`@@` 前回実行のマクロを実行  \n`:reg {register}` マクロ確認  \n\n`q/` コマンドライン履歴を表示する  \nノーマルモードの時の`*`でカーソル位置の単語(?)の検索  \n\n`C-w`s 水平分割  \n`C-w`v 垂直分割  \n\n### 置換コマンド\n\n:[range]s[ubstitute]/{pattern}/{string}/[flags]\n\nsコマンドのgフラグは現在行の意味でグローバルでしかない。  \nファイル全体を変更するならsコマンドの前に`%`をつける  \n\nレジスタの参照し  \n`:%s//\\=@0/g` 直前の検索パターンをヤンクレジスタの内容で置き換える  \n\n`g&` = `:%s//~/&`  \n\n### ファイルの補完\n\n`i_<C-x><C-f>`  \nworkspace/liff-firebase/liff-app/functions/node_modules/\n\n### コンフィグ\n\n`:set spell` => `:set nospell`  \n`:set spell!` 設定値をトグル  \n`:set spell?` 現在の設定値を見る  \n`:set spell&` 設定値をデフォルト値にする  \n\n`:setloacal tabstop=4` 現在のウィンドウとバッファに適用  \n`:bufdo setloacal tabstop=4` 既存のバッファに適用  \n`:windo setloacal tabstop=4` 全てのウィンドウに適用  \n"},{"slug":"run-aliases-commands-inside-vim","frontmatter":{"title":"vim内部(:r!)からエイリアスコマンドを利用する","description":"vim(nvim)からエイリアスコマンドを利用する","date":"2022-08-18","tag":["terminal","vim","zsh"]},"content":"\n### 結論\n`.zshenv`ならvim起動時にも読み込まれるので、エイリアスは`.zshenv`に記述する。\n`.config/nvim/init.nvim` に以下を記述\n```vim\nset shell=zsh\n```\n\n### 余談\nブログを書くときに\"yyyy-mm-dd\"という形でいつも日付を書いていた。  \nその時にvimから`date \"+%Y-%m-%d\"`と実行・挿入したかった。  \n毎回オプションを書くぐらいならalias(名前day)として登録したが、`:r! day`で挿入されなかった.  (エラー内容: シェルが値を返しました 127)  \n\n\n### 参考文献\n- [terminal vim not loading .zshrc](https://stackoverflow.com/questions/11415428/terminal-vim-not-loading-zshrc)\n"},{"slug":"vim-redo-undo-list","frontmatter":{"title":"vimで繰り返しの操作とその対となる操作","description":"vimで繰り返しの操作とその対となる操作","date":"2022-08-20","tag":["vim"]},"content":"\n\n### 繰り返しが可能な操作と対になる操作\n\n| 実施項目 | 操作 | 繰り返す| 戻る| 戻るの取り消し(進む) |\n|:-----------|:------------|:------------|:------------|:------------|\n|変更する | {edit} | . | u | `<C-r>` |\n|行内で文字を前方検索|f{char}/t{char}|;|,||\n|行内で文字を後方検索|F{char}/T{char}|;|,||\n|ドキュメント内で文字を前方検索|/pattern`<CR>`|n|N||\n|ドキュメント内で文字を後方検索|?pattern`<CR>`|n|N||\n|置換の実行|:s/target/replacement|&|u||\n|一連の変更を実行|qx{changes}q|@x|u||\n\n\n### 参考文献\n- [実践Vim 思考のスピードで編集しよう!](https://www.amazon.co.jp/%E5%AE%9F%E8%B7%B5Vim-%E6%80%9D%E8%80%83%E3%81%AE%E3%82%B9%E3%83%94%E3%83%BC%E3%83%89%E3%81%A7%E7%B7%A8%E9%9B%86%E3%81%97%E3%82%88%E3%81%86-Drew-Neil/dp/4048916599)\n"},{"slug":"vim-tmux-reference","frontmatter":{"title":"vim/tmuxを使うに当たって参考にしたサイトまとめ","description":"vimとtmuxを使うに当たって参考にしたサイトまとめ","date":"2022-08-20","tag":["tarminal","tmux","vim"]},"content":"\n## 参考サイトまとめ\n### vim関連\n- [how-to-yank-from-vim-to-system-clipboard](https://vi.stackexchange.com/questions/23130/how-to-yank-from-vim-to-system-clipboard)\n- [How to Undo Changes in Vim / Vi](https://phoenixnap.com/kb/vim-undo-redo)\n- [Neovimでのフロントエンド開発環境 2021](https://zenn.dev/yano/articles/vim_frontend_development_2021)\n- [新人達を1ヶ月でガチvimmerにした方法](https://qiita.com/nyantera/items/4bf29ca6f11bc797a9cb)\n- [vim バッファ入門](https://zenn.dev/sa2knight/articles/e0a1b2ee30e9ec22dea9)\n\n### tmux関連\n- [とほほのtmux入門](https://www.tohoho-web.com/ex/tmux.html)\n- [tmuxで快適にpane移動](https://qiita.com/pocari/items/b1828c8aea8e3545cadd)\n- [tmux select-layout](https://waylonwalker.com/tmux-select-layout/)\n  - main-verticalのvertical設定のバインド\n"}]},"__N_SSG":true}