{"pageProps":{"tag":"bash","posts":[{"slug":"bash-sed-docker-volume","frontmatter":{"title":"ネーミングを忘れて大量にできたdocker volumeをまとめて削除する方法","description":"docker volumeをshellscriptでまとめて削除する方法","date":"2022-07-24","tag":["shellscript","bash"]},"content":"\n### 結論\n```bash\n$ docker volume ls | sed -e 's/local[[:space:]]*//g' | grep -E '.{64,64}' | xargs docker volume rm\n```\n\nDriverの部分(localとスペース)を削除。\n64文字の（ハッシュで自動生成された）ものをリストアップ。\n削除（使用中のボリュームは削除されない）。\n\n### 説明\n気づいたら溜まってしまったdocker volumeたち。。\nふと確認してみたらえらいことになってしまっていた。\n`$ docker volume ls\n```txt\nDRIVER    VOLUME NAME\nlocal     1d516cb7225f448d8bb634875487b5eaa35d329696f77f3ae2347a3abb6aa94a\nlocal     1fbaf3b6210ce64906fffdc1ecf9d711f2d25ebe99dfc2ca3ad3f3aca1a33801\nlocal     3b4da7efd093305d43c40a004c22669f0b8ae8ac5f933c582a4168c9dff51763\nlocal     4aada75a0a85dc48abf02fdff03aab5c3fafeaf096567b6517fc6faf62511749\nlocal     5aa299e15cfeb3a5e3b41c1ab53a17382a11c64101918d916ee9d1e95b0e4672\nlocal     5cd2395082c05f3acb1f910cf77fb5a1ba1c0e845f8522912a5a82a37e0946ce\nlocal     5d76f9a14aa7462eedd428b33c6473125ecc9e442e88fcaabf06e946e20b19d9\nlocal     5f4ba17454db26acce81f3b4ce02d31e270e3c585238db4019b3a2a8482e2238\nlocal     6b4605498282f9b00b367551dfb3d121e7dcaa89626a3785d5dd2914d6138712\n```\n\nこれらをまとめて消したい。（ハッシュ値ではなく名前をきちっとつけてたものは消したくない。）\n\n`$ sed -e 's/local[[:space:]]*//g'`で加工して、\n`$ grep -E '.{64,64}'`で加工して、\ndocker volume rmコマンドの引数に渡す\n\n### ハマったポイント\n\n`$ sed -e \"s/'local[[:space:]]+'//g` とやってみたが\n`+`を1文字以上のマッチでズバッといけると思ったが`local`の部分もまとめて残ってしまった。\n\n`sed -e 's/local[[:space:]]*//g`これだとうまくいった。0文字以上だからなんか不具合起きそうとしたが...shecllscriptの正規表現はこれだから...\n\nスペースやタブを`\\s`や`\\t`で検出しようとしてたが、色々みてたら`[[:space\"]]`の方が確実っぽいような書き方してるのがちらちらと見えた気がする\n\n\n\n\n### 参考文献\n- [Regex Space character in Sed - Stack Overflow](https://stackoverflow.com/questions/15509536/regex-space-character-in-sed)\n- [正しく理解できる！シェルスクリプトとPOSIXの正規表現（令和最新版）〜 基本正規表現BREと拡張正規表現EREについて - Qiita](https://qiita.com/ko1nksm/items/53abc144558b9bb5629f)"},{"slug":"iterm-enable-option-b","frontmatter":{"title":"iTermで1単語分の移動をできるようにする","description":"僕の疑問に追記する形で更新しています。","date":"2022-08-27","tag":["bash","zsh","iTerm"]},"content":"### 前提\n\nterminal操作で`ctrl+a`を押せば行頭へ戻る  \n`ctrl+e`を押せば行末へ移動  \n`ctrl+u`を押せばカーソル位置から行頭まで削除  \nここまではいい。  \n\nしかし、  \n`option + b`や`option + f`を使って1単語分の移動をしようとすると筆記体のfやルート記号が入力され移動できない  \n(MacのoptionはしばしばAltと同等)  \n\n### 結論\n\niTerm側の設定を変更する。  \n画像のLeft Option keyがNormalがデフォルトの設定のはずなので、Esc+に変更する\n![iTerm](https://i.gyazo.com/89dddef08769a9f3f3e3c59408a83ce9.png)\n\n### 参考文献\n\n- [macos - Bash keyboard shortcuts in iTerm like Alt+d and Alt+f - Stack Overflow](https://stackoverflow.com/questions/18923765/bash-keyboard-shortcuts-in-iterm-like-altd-and-altf)\n"}]},"__N_SSG":true}