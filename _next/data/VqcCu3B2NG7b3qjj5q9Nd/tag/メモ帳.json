{"pageProps":{"tag":"メモ帳","posts":[{"slug":"todo-txt-with-vim","frontmatter":{"title":"Todo.txtを運用するならVimがおすすめ","description":"普段はVSCodeを使う人でもTODO.txtを使うならVimで書くのがおすすめという話","date":"2024-12-30","tag":["メモ帳","タスク管理ツール"]},"content":"\nTodo.txtというものをご存知でしょうか、私は2024年のソニックガーデンさんのアドベントカレンダーの[todo.txtを布教したい #Todoアプリ - Qiita](https://qiita.com/maedana/items/713390ce590b92fee97f)で知りました。  \n私は仕事をするとき、作業ログなど個人的なメモをmacOSのプリインストールされたメモ帳に書いています。  \n毎日新しいファイルを作成していましたがメモの一部にはタスクのリストもあり、タスクの部分はほぼ毎日コピペしていて煩わしく思っていました。  \nそんな自分にはぴったりに思えたため、2週間使用してみて思ったことを書いていきます。 \n  \nちなみにTodo.txtはこんな感じ\n```\n- [ ] (E)this is the important\n- [ ] (B)this task\n- [x] (A)hogehoge\n```\n\n### 自分の立ち位置\n\n普段からシンプルなテキストエディタを使用していることのように、自分の作業スタイルを思いつく限り列挙します。  \n- メモ帳にその日の作業ログやタスクリスト、直面した問題への感想などをマークダウン形式でメモしている\n  - マークダウン形式で記述するが、txtファイルにしているし、それ用のビューワーを使うこともない\n  - README.mdなどに書き写す際はマークダウンにしていて良かったと感じるし、らくがき帳に等しい中身なので多少の秩序がほしい\n- タスクリストはテキストファイルの一番上の部分に常にあるがスクロールしたりが面倒くさい\n- プログラマーなのでコードを書くときはVSCodeを使うことが多い\n- Vim盆栽は好きだが、普段はVimをほとんど使わない。\n\n\n## Todo.txtを運用してみた感想\n\n### よかったこと\n\n- Vimの:sortコマンドで並び替えが即終わる\n- ふだんの作業メモからタスクリストがなくなって作業メモ自体が見やすくなった\n- 対応済みのタスクはxでマークするとソート時に最下部へいくので常にファイル先頭を見ていればよくなり楽\n\n### よくなかったこと\n\n- 保存場所についてまだ決まりきらない。プロジェクトごとにTodo.txtを作るか、単一ファイルを運用するか。\n    - 今はプロジェクトごとを試してるけど、単一ファイルのほうがよさそうで悩む\n- 階層構造にできない\n    - :sortを使う都合。公式にも階層化はしないことになってる。\n- 空白行で区切りたいタスク群もソートをしたら意味がなくなる\n    - 優先度をそのタスク群でまとめることで対処しているが、うーん\n- Vimのキーバインドに慣れない\n    - キーバインドを調べる時間が増えたことがネガティブな部分\n    - 調べれば調べるほどVimとの相性の良さに震える\n\n### よく使うコマンド\n\n- 全体の並び替え\n  - `:sort`\n- 完了フラグの操作\n  - `ci[`\n- 優先度の操作\n  - `ci(`\n  - `<C-a>` / `<C-x>`\n  - 自作コマンド\n\n\n### 使うようになった設定\n- `set nrformats=octal,hex,alpha`\n  - インクリメント対象にアルファベットを追加\n- 自作コマンド\n  - `:ChangePriority`で実行\n```\n\"\" for Todo.txt\nlua << EOF\nlocal function change_priority()\n  -- Vim の input() 関数をLuaから呼び出して、対話的に入力を受け取る\n  local oldPri = vim.fn.input('Old Priority (e.g. A): ')\n  local newPri = vim.fn.input('New Priority (e.g. B): ')\n\n  -- A～Z の一文字だけかどうかチェック\n  if string.match(oldPri, '^[A-Z]$') and string.match(newPri, '^[A-Z]$') then\n    -- ここでグローバルコマンドを使い、「- [x]」を含む行は除外して置換を実行\n    -- 例えば \"(A)\" を \"(B)\" に置き換える\n    local cmd = string.format(\"g!/- \\\\[x\\\\]/ s/(%s)/(%s)/g\", oldPri, newPri)\n    vim.cmd(cmd)\n\n    print(\n      string.format(\"Replaced priority from (%s) to (%s) (excluding lines that have - [x])\", oldPri, newPri)\n    )\n  else\n    print(\"Invalid priority input!\")\n  end\nend\n\n-- Luaでユーザーコマンドを作成\nvim.api.nvim_create_user_command(\n  'ChangePriority',\n  function()\n    change_priority()\n  end,\n  {}\n)\nEOF\n```\n\n\n### 結論\n\nタスクリストをメモ帳で運用してる人は、Todo.txtとVimを使うと幸せになれる。  \n私はVimに慣れることをともに目標を据えてもう少し使ってみようと思います。\n\n### 参考文献\n- [todo.txtを布教したい #Todoアプリ - Qiita](https://qiita.com/maedana/items/713390ce590b92fee97f)\n- [Todo.txt: Future-proof task tracking in a file you control](http://todotxt.org/)\n"}]},"__N_SSG":true}